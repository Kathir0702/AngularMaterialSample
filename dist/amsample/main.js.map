{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Services/employee.service.ts","webpack:///./src/app/Shared/global-variables.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/employee-details/employee-details.component.html","webpack:///./src/app/employee-details/employee-details.component.scss","webpack:///./src/app/employee-details/employee-details.component.ts","webpack:///./src/app/leave-details/leave-details.component.html","webpack:///./src/app/leave-details/leave-details.component.scss","webpack:///./src/app/leave-details/leave-details.component.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/nav-menu/nav-menu.component.css","webpack:///./src/app/nav-menu/nav-menu.component.html","webpack:///./src/app/nav-menu/nav-menu.component.ts","webpack:///./src/app/project-details/project-details.component.html","webpack:///./src/app/project-details/project-details.component.scss","webpack:///./src/app/project-details/project-details.component.ts","webpack:///./src/app/task-details/task-details.component.html","webpack:///./src/app/task-details/task-details.component.scss","webpack:///./src/app/task-details/task-details.component.ts","webpack:///./src/app/ticket-details/ticket-details.component.html","webpack:///./src/app/ticket-details/ticket-details.component.scss","webpack:///./src/app/ticket-details/ticket-details.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient} from  '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { Employee } from '../Models/employee';\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  constructor(private  httpClient:  HttpClient) { }\n   getEmployees(): Observable<Employee[]> {\n    return this.httpClient.get<Employee[]>('/api/Priorities');\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalVariablesService {\n  public readonly getSideMenuTitle:string = \"Cognizant\";\n   public readonly API_URL:string = \"\";\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LeaveDetailsComponent } from './leave-details/leave-details.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { TaskDetailsComponent } from './task-details/task-details.component';\nimport { ProjectDetailsComponent } from './project-details/project-details.component';\nimport { TicketDetailsComponent } from './ticket-details/ticket-details.component';\n\nconst routes: Routes = [\n  { path: '', component: EmployeeDetailsComponent },\n  { path: 'employeedetails', component: EmployeeDetailsComponent },\n  { path: 'projectdetails', component: ProjectDetailsComponent },\n  { path: 'ticketdetails', component: TicketDetailsComponent },\n  { path: 'taskdetails', component: TaskDetailsComponent },\n  { path: 'leavedetails', component: LeaveDetailsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n    <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"true\\\" [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n        [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\" [opened]=\\\"!(isHandset$ | async)\\\">\\n        <mat-toolbar color=\\\"primary\\\">{{sideMenuTitle}}</mat-toolbar>\\n        <mat-nav-list>\\n            <a mat-list-item routerLink='/'>Employee Details</a>\\n            <a mat-list-item routerLink='/projectdetails'>Project Details</a>\\n            <a mat-list-item routerLink='/ticketdetails'>Ticket Details</a>\\n            <a mat-list-item routerLink='/taskdetails'>Task Details</a>\\n            <a mat-list-item routerLink='/leavedetails'>Leave Tracker</a>\\n        </mat-nav-list>\\n        </mat-sidenav>\\n        <mat-sidenav-content>\\n            <mat-toolbar color=\\\"primary\\\">\\n                <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\" *ngIf=\\\"isHandset$ | async\\\">\\n                    <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n                </button>\\n                <span>{{AppName}}</span>\\n                    <span class=\\\"menu-spacer\\\"></span>\\n                     <mat-icon class=\\\"menu-icon\\\">verified_user</mat-icon>\\n                    <mat-icon class=\\\"menu-icon\\\">delete</mat-icon>\\n            </mat-toolbar>\\n            <router-outlet></router-outlet>\\n        </mat-sidenav-content>\\n</mat-sidenav-container>\"","module.exports = \".menu-icon {\\n  padding: 0 14px;\\n  cursor: pointer; }\\n\\n.menu-spacer {\\n  flex: 1 1 auto; }\\n\\n.sidenav-container {\\n  height: 100%; }\\n\\n.sidenav {\\n  width: 200px;\\n  box-shadow: 3px 0 6px rgba(0, 0, 0, 0.24); }\\n\\n.menu-icon {\\n  padding: 0 14px; }\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n    map(result => result.matches)\n    );\n  readonly sideMenuTitle = \"Cognizant\";\n  AppName = \"GRM\";\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'; \n//import { HttpModule } from '@angular/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material/material.module';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule } from '@angular/material';\nimport { LeaveDetailsComponent } from './leave-details/leave-details.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { TaskDetailsComponent } from './task-details/task-details.component';\nimport { ProjectDetailsComponent } from './project-details/project-details.component';\nimport { TicketDetailsComponent } from './ticket-details/ticket-details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavMenuComponent,\n    LeaveDetailsComponent,\n    EmployeeDetailsComponent,\n    TaskDetailsComponent,\n    ProjectDetailsComponent,\n    TicketDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    LayoutModule,\n    // MatToolbarModule,\n    // MatButtonModule,\n    // MatSidenavModule,\n    // MatIconModule,\n    // MatListModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<mat-card class=\\\"main-card\\\">\\n  <mat-card-header>\\n<mat-toolbar>\\n  <span>Employee Details</span>\\n</mat-toolbar>\\n  </mat-card-header>\\n  <div class=\\\"main-card-content\\\">\\n   <mat-card-content>\\n    <mat-list>\\n  \\t<mat-list-item *ngFor=\\\"let employeeData of EmployeeList\\\">\\n    \\t<h3 mat-line>\\n      \\t{{ employeeData.PriorityName }}\\n    \\t</h3>\\n  \\t</mat-list-item>\\n\\t</mat-list>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button color=\\\"primary\\\">SAVE</button>\\n    <button mat-button>BACK</button>\\n  </mat-card-actions>\\n  </div>\\n</mat-card>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../Services/employee.service';\nimport {DataSource} from '@angular/cdk/collections';\nimport { Employee } from '../Models/employee';\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html',\n  styleUrls: ['./employee-details.component.scss']\n})\nexport class EmployeeDetailsComponent implements OnInit {\nAppName = \"Employee Details\";\nEmployeeList: Employee[];\n  constructor(private employeeService : EmployeeService) { }\n\n  ngOnInit() {\nthis.employeeService.getEmployees().subscribe(data => {\n  console.log(data);\n      this.EmployeeList = data;\n    });\n  }\n\n}\n","module.exports = \"<mat-card class=\\\"main-card\\\">\\n  <mat-card-header>\\n<mat-toolbar>\\n  <span>Leave Details</span>\\n</mat-toolbar>\\n  </mat-card-header>\\n  <div class=\\\"main-card-content\\\">\\n   <mat-card-content>\\n    <p>\\n     Leave Details...\\n    </p>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button color=\\\"primary\\\">SAVE</button>\\n    <button mat-button>BACK</button>\\n  </mat-card-actions>\\n  </div>\\n</mat-card>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-leave-details',\n  templateUrl: './leave-details.component.html',\n  styleUrls: ['./leave-details.component.scss']\n})\nexport class LeaveDetailsComponent implements OnInit {\n\n  constructor() {\n   }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as MatModule from '@angular/material';\nimport { CdkTableModule } from '@angular/cdk/table';\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n  MatModule.MatAutocompleteModule,\n  MatModule.MatButtonModule,\n  MatModule.MatButtonToggleModule,\n  MatModule.MatCardModule,\n  MatModule.MatCheckboxModule,\n  MatModule.MatChipsModule,\n  MatModule.MatDatepickerModule,\n  MatModule.MatDialogModule,\n  MatModule.MatExpansionModule,\n  MatModule.MatGridListModule,\n  MatModule.MatIconModule,\n  MatModule.MatInputModule,\n  MatModule.MatListModule,\n  MatModule.MatMenuModule,\n  MatModule.MatNativeDateModule,\n  MatModule.MatPaginatorModule,\n  MatModule.MatProgressBarModule,\n  MatModule.MatProgressSpinnerModule,\n  MatModule.MatRadioModule,\n  MatModule.MatRippleModule,\n  MatModule.MatSelectModule,\n  MatModule.MatSidenavModule,\n  MatModule.MatSliderModule,\n  MatModule.MatSlideToggleModule,\n  MatModule.MatSnackBarModule,\n  MatModule.MatSortModule,\n  MatModule.MatTableModule,\n  MatModule.MatTabsModule,\n  MatModule.MatToolbarModule,\n  MatModule.MatTooltipModule,\n  MatModule.MatStepperModule,\n  CdkTableModule\n  ],\n  declarations: []\n})\nexport class MaterialModule { }\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n  box-shadow: 3px 0 6px rgba(0,0,0,.24);\\n}\\n\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"true\\\" [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\" [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar color=\\\"primary\\\">{{sideMenuTitle}}</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item routerLink='/'>Employee Details</a>\\n      <a mat-list-item routerLink='/projectdetails'>Project Details</a>\\n      <a mat-list-item routerLink='/ticketdetails'>Ticket Details</a>\\n      <a mat-list-item routerLink='/taskdetails'>Task Details</a>\\n      <a mat-list-item routerLink='/leavedetails'>Leave Tracker</a>\\n    </mat-nav-list>\\n    </mat-sidenav>\\n    <mat-sidenav-content>\\n      <mat-toolbar color=\\\"primary\\\">\\n        <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\" *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n        <span>{{AppName}}</span>\\n      </mat-toolbar>\\n      <router-outlet></router-outlet>\\n    </mat-sidenav-content>\\n</mat-sidenav-container>\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { GlobalVariablesService  } from '../Shared/global-variables.service';\n@Component({\n  selector: 'nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css'],\n  providers: [ GlobalVariablesService ]\n})\nexport class NavMenuComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n    sideMenuTitle:string;\n    AppName;\n  constructor(private breakpointObserver: BreakpointObserver, private globalVariable : GlobalVariablesService) {\n     this.sideMenuTitle = globalVariable.getSideMenuTitle;\n    // this.AppName = this.globalVariable.getAppName;\n  }\n  \n  }\n","module.exports = \"<mat-card class=\\\"main-card\\\">\\n  <mat-card-header>\\n<mat-toolbar>\\n  <span>Project Details</span>\\n</mat-toolbar>\\n  </mat-card-header>\\n  <div class=\\\"main-card-content\\\">\\n   <mat-card-content>\\n    <p>\\n     Project Details...\\n    </p>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button color=\\\"primary\\\">SAVE</button>\\n    <button mat-button>BACK</button>\\n  </mat-card-actions>\\n  </div>\\n</mat-card>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-project-details',\n  templateUrl: './project-details.component.html',\n  styleUrls: ['./project-details.component.scss']\n})\nexport class ProjectDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<mat-card class=\\\"main-card\\\">\\n  <mat-card-header>\\n<mat-toolbar>\\n  <span>Task Details</span>\\n</mat-toolbar>\\n  </mat-card-header>\\n  <div class=\\\"main-card-content\\\">\\n   <mat-card-content>\\n    <p>\\n     Task Details...\\n    </p>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button color=\\\"primary\\\">SAVE</button>\\n    <button mat-button>BACK</button>\\n  </mat-card-actions>\\n  </div>\\n</mat-card>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-task-details',\n  templateUrl: './task-details.component.html',\n  styleUrls: ['./task-details.component.scss']\n})\nexport class TaskDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<mat-card class=\\\"main-card\\\">\\n  <mat-card-header>\\n<mat-toolbar>\\n  <span>Ticket Details</span>\\n</mat-toolbar>\\n  </mat-card-header>\\n  <div class=\\\"main-card-content\\\">\\n   <mat-card-content>\\n    <p>\\n     Ticket Details...\\n    </p>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button color=\\\"primary\\\">SAVE</button>\\n    <button mat-button>BACK</button>\\n  </mat-card-actions>\\n  </div>\\n</mat-card>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ticket-details',\n  templateUrl: './ticket-details.component.html',\n  styleUrls: ['./ticket-details.component.scss']\n})\nexport class TicketDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}